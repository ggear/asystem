#######################################################################################
# Weather as adapted from https://github.com/DavidFW1960/bom-weather-card
#######################################################################################

# TODO: Currently not being picked up, could not be wired in config_flow or using wrong keys, think the former
#bureau_of_meteorology:
#  latitude: -31.9474
#  longutude: 115.8648
#  observations_create: true
#  observations_basename: gooseberry_hill
#  observations_monitored: [ 'temp', 'temp_feels_like', 'rain_since_9am', 'humidity', 'wind_speed_kilometre', 'wind_speed_knot', 'wind_direction', 'gust_speed_kilometre', 'gust_speed_knot' ]
#  forecasts_create: true
#  forecasts_basename: darlington_forecast
#  forecasts_monitored: [ 'temp_max', 'temp_min', 'extended_text', 'icon_descriptor', 'mdi_icon', 'short_text', 'uv_category', 'uv_max_index', 'uv_start_time', 'uv_end_time', 'rain_amount_min', 'rain_amount_max', 'rain_amount_range', 'rain_chance', 'fire_danger' ]
#  forecasts_days: 7

sensor:

  - platform: template
    sensors:

      bom_current_text:
        value_template: >
          {% set val = states('sensor.darlington_forecast_short_text_0').split('.')[0] %}
          {{ val | title }}

      bom_uv_alert:
        value_template: >

          {%- if states('sensor.darlington_forecast_uv_max_index_0') | lower not in ['unavailable', 'unknown', 'none', 'n/a'] and states('sensor.bom_today_uv') | lower not in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            {% set to = as_timestamp(states('sensor.darlington_forecast_uv_end_time_0')) | timestamp_custom(' %I:%M %p') %}
            {% set from = as_timestamp(states('sensor.darlington_forecast_uv_start_time_0')) | timestamp_custom(' %I:%M %p') %}
            {%- if from == None or to == None -%}
              Sun protection is not required today with a UV Index of {{ states('sensor.darlington_forecast_uv_max_index_0') }} and rating {{ states('sensor.bom_today_uv') }}.
            {%- else -%}
              Sun Protection is required between {{ from }} to {{ to }} today with a UV Index of {{ states('sensor.darlington_forecast_uv_max_index_0') }} and rating {{ states('sensor.bom_today_uv') }}.
            {%- endif -%}
          {%- endif -%}


      bom_fire_danger:
        value_template: >
          {% set fire = states('sensor.darlington_forecast_fire_danger_0') %}
          {%- if fire == None -%}
            Fire danger is rated Low today.
          {%- else -%}
            Fire danger is rated {{ states('sensor.darlington_forecast_fire_danger_0') }}.
          {%- endif -%}

      # Beaufort
      # https://en.wikipedia.org/wiki/Beaufort_scale
      beaufort:
        value_template: >
          {%- if states('sensor.gooseberry_hill_wind_speed_kilometre') | float  >= 118 -%}
          12
          {%- elif states('sensor.gooseberry_hill_wind_speed_kilometre') | float  >= 103 -%}
          11
          {%- elif states('sensor.gooseberry_hill_wind_speed_kilometre') | float  >= 89 -%}
          10
          {%- elif states('sensor.gooseberry_hill_wind_speed_kilometre') | float  >= 75 -%}
          9
          {%- elif states('sensor.gooseberry_hill_wind_speed_kilometre') | float  >= 62 -%}
          8
          {%- elif states('sensor.gooseberry_hill_wind_speed_kilometre') | float  >= 50 -%}
          7
          {%- elif states('sensor.gooseberry_hill_wind_speed_kilometre') | float  >= 39 -%}
          6
          {%- elif states('sensor.gooseberry_hill_wind_speed_kilometre') | float  >= 29 -%}
          5
          {%- elif states('sensor.gooseberry_hill_wind_speed_kilometre') | float  >= 20 -%}
          4
          {%- elif states('sensor.gooseberry_hill_wind_speed_kilometre') | float  >= 12 -%}
          3
          {%- elif states('sensor.gooseberry_hill_wind_speed_kilometre') | float  >= 6 -%}
          2
          {%- elif states('sensor.gooseberry_hill_wind_speed_kilometre') | float  >= 2 -%}
          1
          {%- else -%}
          0
          {%- endif -%}

      # Heatindex
      # https://en.wikipedia.org/wiki/Heat_index
      heatindex:
        unit_of_measurement: °C
        device_class: temperature
        value_template: >
          {%- if states('sensor.gooseberry_hill_temp') | float > 27 and states('sensor.gooseberry_hill_humidity') | float > 40 -%}
          {% set T = states('sensor.gooseberry_hill_temp') | float %}
          {% set R = states('sensor.gooseberry_hill_humidity') | float %}
          {% set c1 = -8.78469475556 %}
          {% set c2 = 1.61139411 %}
          {% set c3 = 2.33854883889 %}
          {% set c4 = -0.14611605 %}
          {% set c5 = -0.012308094 %}
          {% set c6 = -0.0164248277778 %}
          {% set c7 = 0.002211732 %}
          {% set c8 = 0.00072546 %}
          {% set c9 = -0.000003582 %}
          {% set HI = c1 + (c2 * T ) + (c3 * R) + ( c4 * T * R ) + ( c5 * T**2 ) + ( c6 * R**2 ) + ( c7 * T**2 * R ) + ( c8 * T * R**2 ) + ( c9 * T**2 * R**2 ) %}
          {{ HI | round }}
          {%- else -%}
          0
          {%- endif -%}
      heatindexrating:
        value_template: >
          {%- if states('sensor.heatindex') == 'n/a' -%}
          Out of range
          {%- elif states('sensor.heatindex') | float  >= 54 -%}
          Extreme danger: heat stroke imminent
          {%- elif states('sensor.heatindex') | float  >= 41 -%}
          Danger: cramps, exhaustion heat stroke probable
          {%- elif states('sensor.heatindex') | float  >= 32 -%}
          Extreme caution: cramps and exhaustion possible
          {%- elif states('sensor.heatindex') | float  >= 26 -%}
          Caution: fatigue possible
          {%- else -%}
          Normal
          {%- endif -%}

      bom_forecast_0:
        friendly_name: "Today"
        value_template: >
          {% if states('sensor.darlington_forecast_temp_min_0') in ['unavailable', 'unknown', 'none', 'n/a'] %} {% set min = states('sensor.bom_today_min') %} {% else %} {% set min = states('sensor.darlington_forecast_temp_min_0') %} {% endif %}
          {% if states('sensor.darlington_forecast_temp_max_0') in ['unavailable', 'unknown', 'none', 'n/a'] %} {% set max = states('sensor.bom_today_max') %} {% else %} {% set max = states('sensor.darlington_forecast_temp_max_0') %} {% endif %}
          {% if states('sensor.darlington_forecast_rain_chance_0') in ['unavailable', 'unknown', 'none', 'n/a'] %} {% set rain = 0 %} {% else %} {% set rain = states('sensor.darlington_forecast_rain_chance_0') %} {% endif %}
          {{ max|float(0)|round(0)}}°/{{ min|float(0)|round(0)}}°/{{ rain|float(0)|round(0) }}%
        entity_picture_template: >-
          {%- if states('sun.sun') == 'below_horizon' and (states('sensor.darlington_forecast_icon_descriptor_0') == 'fog' or states('sensor.darlington_forecast_icon_descriptor_0') == 'haze' or states('sensor.darlington_forecast_icon_descriptor_0') == 'hazy' or states('sensor.darlington_forecast_icon_descriptor_0') == 'light-showers' or states('sensor.darlington_forecast_icon_descriptor_0') == 'partly-cloudy' or states('sensor.darlington_forecast_icon_descriptor_0') == 'showers' or states('sensor.darlington_forecast_icon_descriptor_0') == 'shower' or states('sensor.darlington_forecast_icon_descriptor_0') == 'light_showers' or states('sensor.darlington_forecast_icon_descriptor_0') == 'light_shower' or states('sensor.darlington_forecast_icon_descriptor_0') == 'partly_cloudy' or states('sensor.darlington_forecast_icon_descriptor_0') == 'mostly_sunny') -%}
          {{ '/local/icons/bom_icons/' ~ states('sensor.darlington_forecast_icon_descriptor_0') ~ '-night.png' }}
          {%- else -%}
          {{ '/local/icons/bom_icons/' ~ states('sensor.darlington_forecast_icon_descriptor_0') ~ '.png' }}
          {%- endif -%}

      bom_forecast_1:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (1 * 86400 ) -%}
          {{ date | timestamp_custom('Tomorrow (%-d/%-m)') }}
        value_template: >
          {{states('sensor.darlington_forecast_temp_max_1')|float(0)|round(0)}}°/{{states('sensor.darlington_forecast_temp_min_1')|float(0)|round(0)}}°/{{states('sensor.darlington_forecast_rain_chance_1')|float(0)|round(0)}}%
        entity_picture_template: >-
          {{ '/local/icons/bom_icons/' ~ states('sensor.darlington_forecast_icon_descriptor_1') ~ '.png' }}

      bom_forecast_2:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (2 * 86400 ) -%}
          {{ date | timestamp_custom('%A (%-d/%-m)') }}
        value_template: >
          {{states('sensor.darlington_forecast_temp_max_2')|float(0)|round(0)}}°/{{states('sensor.darlington_forecast_temp_min_2')|float(0)|round(0)}}°/{{states('sensor.darlington_forecast_rain_chance_2')|float(0)|round(0)}}%
        entity_picture_template: >-
          {{ '/local/icons/bom_icons/' ~ states('sensor.darlington_forecast_icon_descriptor_2') ~ '.png' }}

      bom_forecast_3:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (3 * 86400 ) -%}
          {{ date | timestamp_custom('%A (%-d/%-m)') }}
        value_template: >
          {{states('sensor.darlington_forecast_temp_max_3')|float(0)|round(0)}}°/{{states('sensor.darlington_forecast_temp_min_3')|float(0)|round(0)}}°/{{states('sensor.darlington_forecast_rain_chance_3')|float(0)|round(0)}}%
        entity_picture_template: >-
          {{ '/local/icons/bom_icons/' ~ states('sensor.darlington_forecast_icon_descriptor_3') ~ '.png' }}

      bom_forecast_4:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (4 * 86400 ) -%}
          {{ date | timestamp_custom('%A (%-d/%-m)') }}
        value_template: >
          {{states('sensor.darlington_forecast_temp_max_4')|float(0)|round(0)}}°/{{states('sensor.darlington_forecast_temp_min_4')|float(0)|round(0)}}°/{{states('sensor.darlington_forecast_rain_chance_4')|float(0)|round(0)}}%
        entity_picture_template: >-
          {{ '/local/icons/bom_icons/' ~ states('sensor.darlington_forecast_icon_descriptor_4') ~ '.png' }}

      bom_forecast_5:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (5 * 86400 ) -%}
          {{ date | timestamp_custom('%A (%-d/%-m)') }}
        value_template: >
          {{states('sensor.darlington_forecast_temp_max_5')|float(0)|round(0)}}°/{{states('sensor.darlington_forecast_temp_min_5')|float(0)|round(0)}}°/{{states('sensor.darlington_forecast_rain_chance_5')|float(0)|round(0)}}%
        entity_picture_template: >-
          {{ '/local/icons/bom_icons/' ~ states('sensor.darlington_forecast_icon_descriptor_5') ~ '.png' }}

      bom_forecast_6:
        friendly_name_template: >
          {%- set date = as_timestamp(now()) + (6 * 86400 ) -%}
          {{ date | timestamp_custom('%A (%-d/%-m)') }}
        value_template: >
          {{states('sensor.darlington_forecast_temp_max_6')|float(0)|round(0)}}°/{{states('sensor.darlington_forecast_temp_min_6')|float(0)|round(0)}}°/{{states('sensor.darlington_forecast_rain_chance_6')|float(0)|round(0)}}%
        entity_picture_template: >-
          {{ '/local/icons/bom_icons/' ~ states('sensor.darlington_forecast_icon_descriptor_6') ~ '.png' }}

      bom_rain_range_0:
        value_template: >
          {%- if states('sensor.darlington_forecast_rain_amount_range_0') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            0
          {% else %}
          {{ states('sensor.darlington_forecast_rain_amount_range_0') | replace(" to ", "-") }}
          {% endif %}

      bom_rain_range_1:
        value_template: >
          {%- if states('sensor.darlington_forecast_rain_amount_range_1') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            0
          {% else %}
          {{ states('sensor.darlington_forecast_rain_amount_range_1') | replace(" to ", "-") }}
          {% endif %}

      bom_rain_range_2:
        value_template: >
          {%- if states('sensor.darlington_forecast_rain_amount_range_2') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            0
          {% else %}
          {{ states('sensor.darlington_forecast_rain_amount_range_2') | replace(" to ", "-") }}
          {% endif %}

      bom_rain_range_3:
        value_template: >
          {%- if states('sensor.darlington_forecast_rain_amount_range_3') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            0
          {% else %}
          {{ states('sensor.darlington_forecast_rain_amount_range_3') | replace(" to ", "-") }}
          {% endif %}

      bom_rain_range_4:
        value_template: >
          {%- if states('sensor.darlington_forecast_rain_amount_range_4') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            0
          {% else %}
          {{ states('sensor.darlington_forecast_rain_amount_range_4') | replace(" to ", "-") }}
          {% endif %}

      bom_rain_range_5:
        value_template: >
          {%- if states('sensor.darlington_forecast_rain_amount_range_5') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            0
          {% else %}
          {{ states('sensor.darlington_forecast_rain_amount_range_5') | replace(" to ", "-") }}
          {% endif %}

      bom_rain_range_6:
        value_template: >
          {%- if states('sensor.darlington_forecast_rain_amount_range_6') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            0
          {% else %}
          {{ states('sensor.darlington_forecast_rain_amount_range_6') | replace(" to ", "-") }}
          {% endif %}


      bom_rain_chance_1:
        value_template: >
          {{ states('sensor.darlington_forecast_rain_chance_1') | float(0) }}

      bom_rain_chance_2:
        value_template: >
          {{ states('sensor.darlington_forecast_rain_chance_2') | float(0) }}

      bom_rain_chance_3:
        value_template: >
          {{ states('sensor.darlington_forecast_rain_chance_3') | float(0) }}

      bom_rain_chance_4:
        value_template: >
          {{ states('sensor.darlington_forecast_rain_chance_4') | float(0) }}

      bom_rain_chance_5:
        value_template: >
          {{ states('sensor.darlington_forecast_rain_chance_5') | float(0) }}

      bom_today_rain_chance:
        value_template: >
          {%- if states('sensor.darlington_forecast_rain_chance_0') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            {{ state_attr('sensor.today_rain_chance_bom', 'max_value') | float(0) }}
          {% else %}
            {{ states('sensor.darlington_forecast_rain_chance_0') }}
          {% endif %}

      bom_today_rain:
        value_template: >
          {%- if states('sensor.darlington_forecast_rain_amount_range_0') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            {{ states('sensor.bom_today_rain') }}
          {% else %}
            {{ states('sensor.darlington_forecast_rain_amount_range_0') | replace(" to ", "-") }}
          {% endif %}

      bom_today_humidity:
        value_template: >
          {%- if states('sensor.gooseberry_hill_humidity') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            {{ states('sensor.bom_today_humidity') }}
          {% else %}
            {{ states('sensor.gooseberry_hill_humidity') }}
          {% endif %}

      bom_today_wind_direction:
        value_template: >
          {%- if states('sensor.gooseberry_hill_wind_direction') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            {{ states('sensor.bom_today_wind_direction') }}
          {% else %}
            {{ states('sensor.gooseberry_hill_wind_direction') }}
          {% endif %}

      bom_today_wind_speed:
        value_template: >
          {%- if states('sensor.gooseberry_hill_wind_speed_kilometre') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            {{ states('sensor.bom_today_wind_speed') }}
          {% else %}
            {{ states('sensor.gooseberry_hill_wind_speed_kilometre') }}
          {% endif %}

      bom_today_wind_speed_gust:
        value_template: >
          {%- if states('sensor.gooseberry_hill_gust_speed_kilometre') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            {{ states('sensor.bom_today_wind_speed_gust') }}
          {% else %}
            {{ states('sensor.gooseberry_hill_gust_speed_kilometre') }}
          {% endif %}

      bom_today_uv:
        value_template: >
          {%- if states('sensor.darlington_forecast_uv_category_0') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            {{ states('sensor.bom_today_uv') | title }}
          {% else %}
            {{ states('sensor.darlington_forecast_uv_category_0') | replace('very', 'very ') | title }}
          {% endif %}

      bom_today_fire:
        value_template: >
          {%- if states('sensor.darlington_forecast_fire_danger_0') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            {{ states('sensor.bom_today_fire') }}
          {% else %}
            {{ states('sensor.darlington_forecast_fire_danger_0') }}
          {% endif %}

      # ONLY USE ONE bom_today_max below:
      #      bom_today_max:
      #        value_template: >
      #          {{ state_attr('sensor.today_temp_bom', 'max_value') }}

      bom_today_max:
        value_template: >
          {%- if states('sensor.darlington_forecast_temp_max_0') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            {{ state_attr('sensor.today_temp_bom', 'max_value') }}
          {% else %}
            {{ states('sensor.darlington_forecast_temp_max_0') }}
          {% endif %}

      bom_today_maxs:
        value_template: >
          {{ states('sensor.bom_today_max') | float(0) | round | int }} ({{ state_attr('sensor.today_temp_roof', 'max_value') | float(0) | round(0, 'ceil') }})

      # ONLY USE ONE bom_today_min below:
      #      bom_today_min:
      #        value_template: >
      #          {{ state_attr('sensor.today_temp_bom', 'min_value') }}

      bom_today_min:
        value_template: >
          {%- if states('sensor.darlington_forecast_temp_min_0') in ['unavailable', 'unknown', 'none', 'n/a'] -%}
            {{ state_attr('sensor.today_temp_bom', 'min_value') }}
          {% else %}
            {{ states('sensor.darlington_forecast_temp_min_0') }}
          {% endif %}

      bom_today_mins:
        value_template: >
          {{ states('sensor.bom_today_min') | float(0) | round | int }} ({{ state_attr('sensor.today_temp_roof', 'min_value') | float(0) |round(0, 'floor') }})

      bom_today_rains:
        value_template: >
          {{ states('sensor.bom_today_rain') }} (
          {%- if states('sensor.roof_daily_rain') in ['unavailable', 'unknown', 'none', 'n/a'] -%}unknown)
          {% else %}{{ states('sensor.roof_daily_rain') | float(0) | round | int }})
          {% endif %}

      bom_today_humiditys:
        value_template: >
          {{ states('sensor.bom_today_humidity') }} ({{ states('sensor.today_humidity_roof') | float(0) | round | int }})

      bom_today_wind_gusts:
        value_template: >
          {{ states('sensor.bom_today_wind_speed_gust') | float(0) }} ({{ state_attr('sensor.today_gusts_roof', 'max_value') | float(0) | round | int }})


  # IMPORTANT NOTE IF YOU USE average, you must comment out the below statistics sensor. Both cannot exist
  # https://github.com/Limych/ha-average
  - platform: average
    name: today_temp_bom
    entities:
      - sensor.gooseberry_hill_temp
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: average
    name: today_rain_chance_bom
    entities:
      - sensor.bom_today_rain_chance
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: average
    name: today_temp_roof
    entities:
      - sensor.roof_temperature
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: average
    name: today_rain_roof
    entities:
      - sensor.roof_daily_rain
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: average
    name: today_humidity_roof
    entities:
      - sensor.roof_humidity
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: average
    name: today_gusts_roof
    entities:
      - sensor.roof_wind_gust_speed
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  # IMPORTANT NOTE IF YOU USE statistics, you must comment out the above average sensor. Both cannot exist
  #  - platform: statistics
  #    name: today_temp_bom
  #    sampling_size: 150
  #    entity_id: sensor.gooseberry_hill_temp
  #    max_age:
  #      hours: 24

  - platform: sun2
    monitored_conditions:
      - solar_midnight
      - astronomical_dawn
      - nautical_dawn
      - dawn
      - sunrise
      - solar_noon
      - sunset
      - dusk
      - nautical_dusk
      - astronomical_dusk
      - daylight
      - civil_daylight
      - nautical_daylight
      - astronomical_daylight
      - night
      - civil_night
      - nautical_night
      - astronomical_night
      - elevation
      - min_elevation
      - max_elevation
    entity_namespace: solar

  - platform: template
    sensors:
      illuminance:
        friendly_name: "Solar Illuminance Estimate"
        icon_template: mdi:brightness-auto
        device_class: illuminance
        unit_of_measurement: lx
        value_template: |
          {%- set factors = namespace(condition='',sun='') %}

          {#- Retrieve the current condition and normalize the value #}
          {%- set current_condition = states("weather.darlington_forecast") %}
          {%- set current_condition = current_condition|lower|replace("partly cloudy w/ ","")|replace("mostly cloudy w/ ","")|replace("freezing","")|replace("and","")|replace(" ", "")|replace("-", " ")|replace("_", " ")|replace("(","")|replace(")","") %}

          {#- Assign a seemingly arbitrary number to the condition factor #}
          {%- set condition_factors = {
            "10000": ("clear", "clearnight", "sunny", "windy", "wind", "windyvariant", "exceptional"),
            "7500": ("partlycloudy", "partlysunny", "mostlysunny", "mostlyclear", "hazy", "hazey", "hazysunshine", "intermittentclouds", "lightrain"),
            "2500": ("cloudy", "mostlycloudy"),
            "1000": ("fog", "foggy", "dust", "dusty", "rainy", "pouring", "rain", "lightshower", "lightshowers", "showers", "shower", "snowy", "snow", "snowyheavy", "snowyrainy", "flurries", "chanceflurries", "chancerain", "chancesleet", "drearyovercast", "sleet", "frost"),
            "200": ("hail", "lightning", "lightningrainy", "tstorms", "thunderstorm", "storm", "stormy", "heavyshower", "heavyshowers", "tropicalcyclone")
          } %}
          {%- for factor in condition_factors if current_condition in condition_factors[factor] %}
            {%- set factors.condition = factor %}
          {%- endfor %}

          {#- Compute Sun Factor #}
          {%- set right_now = now() | as_timestamp(0) %}
          {%- set sunrise = states("sensor.solar_sunrise") | as_timestamp(0) %}
          {%- set sunrise_begin = states("sensor.solar_dawn") | as_timestamp(0) %}
          {%- set sunrise_end = sunrise + (40 * 60) %}
          {%- set sunset = states("sensor.solar_sunset") | as_timestamp(0) %}
          {%- set sunset_begin = sunset - (40 * 60) %}
          {%- set sunset_end = states("sensor.dusk") | as_timestamp(0) %}
          {%- if sunrise_end < right_now and right_now < sunset_begin %}
            {%- set factors.sun = 1 %}
          {%- elif sunset_end < right_now or right_now < sunrise_begin %}
            {%- set factors.sun = 0 %}
          {%- elif right_now <= sunrise_end %}
            {%- set factors.sun = (right_now - sunrise_begin) / (60*60) %}
          {%- else %}
            {%- set factors.sun = (sunset_end - right_now) / (60*60) %}
          {%- endif %}
          {%- set factors.sun = 1 if factors.sun > 1 else factors.sun %}

          {# Take an educated guess #}
          {%- set illuminance = (factors.sun | float(0) * factors.condition | float(0)) | round %}
          {%- set illuminance = 10 if illuminance < 10 else illuminance %}
          {{ illuminance }}

binary_sensor:
  - platform: sun2
    monitored_conditions:
      - elevation
      - elevation:
          above: 25
          name: Sun Above 25
  - platform: workday
    country: AU
    province: WA
    workdays: [ mon, tue, wed, thu, fri ]
    excludes: [ sat, sun, holiday ]

automation:
  - alias: 'Weather: Update BOM Icons'
    trigger:
      - event: start
        platform: homeassistant
      - entity_id: sun.sun
        platform: state
        to: 'above_horizon'
      - entity_id: sun.sun
        platform: state
        to: 'below_horizon'
    action:
      - service: homeassistant.update_entity
        entity_id: sensor.bom_forecast_0, sensor.bom_forecast_1, sensor.bom_forecast_2, sensor.bom_forecast_3, sensor.bom_forecast_4, sensor.bom_forecast_5, sensor.bom_forecast_6
