#######################################################################################
# WARNING: This file is written to by the build process, any manual edits will be lost!
#######################################################################################
stream:
#######################################################################################
input_boolean:
  #####################################################################################
  home_security:
    name: Security
  home_security_triggered:
    name: Security triggered flag
    initial: false
  #####################################################################################
  back_door_lock_security:
    name: Back Door Lock Security
  #####################################################################################
  front_door_lock_security:
    name: Front Door Lock Security
#######################################################################################
template:
  #####################################################################################
  - binary_sensor:
      #################################################################################
      - unique_id: back_door_state
        icon: >-
          {% if states('binary_sensor.template_back_door_sensor_contact_last') == 'off' and states('lock.back_door_lock') == 'locked' %}
            mdi:shield-lock
          {% else %}
            mdi:shield-lock-open
          {% endif %}
        state: >-
          {% if states('binary_sensor.template_back_door_sensor_contact_last') == 'off' and states('lock.back_door_lock') == 'locked' %}
            on
          {% else %}
            off
          {% endif %}
      #################################################################################
      - unique_id: front_door_state
        icon: >-
          {% if states('binary_sensor.template_front_door_sensor_contact_last') == 'off' and states('lock.front_door_lock') == 'locked' %}
            mdi:shield-lock
          {% else %}
            mdi:shield-lock-open
          {% endif %}
        state: >-
          {% if states('binary_sensor.template_front_door_sensor_contact_last') == 'off' and states('lock.front_door_lock') == 'locked' %}
            on
          {% else %}
            off
          {% endif %}
      #################################################################################
      - unique_id: back_door_sensor_contact_last
        device_class: door
        state: >-
          {% if states('binary_sensor.back_door_sensor_contact') not in ['unavailable', 'unknown', 'none', 'n/a'] %}
            {{ states('binary_sensor.back_door_sensor_contact') }}
          {% else %}
            {{ states('binary_sensor.template_back_door_sensor_contact_last') }}
          {% endif %}
      #################################################################################
      - unique_id: front_door_sensor_contact_last
        device_class: door
        state: >-
          {% if states('binary_sensor.front_door_sensor_contact') not in ['unavailable', 'unknown', 'none', 'n/a'] %}
            {{ states('binary_sensor.front_door_sensor_contact') }}
          {% else %}
            {{ states('binary_sensor.template_front_door_sensor_contact_last') }}
          {% endif %}
  #####################################################################################
  - sensor:
      #################################################################################
      - unique_id: back_door_sensor_battery_last
        device_class: battery
        state_class: measurement
        unit_of_measurement: "%"
        state: >-
          {% if states('sensor.back_door_sensor_battery') not in ['unavailable', 'unknown', 'none', 'n/a'] %}
            {{ states('sensor.back_door_sensor_battery') }}
          {% else %}
            {{ states('sensor.template_back_door_sensor_battery_last') }}
          {% endif %}
      #################################################################################
      - unique_id: front_door_sensor_battery_last
        device_class: battery
        state_class: measurement
        unit_of_measurement: "%"
        state: >-
          {% if states('sensor.front_door_sensor_battery') not in ['unavailable', 'unknown', 'none', 'n/a'] %}
            {{ states('sensor.front_door_sensor_battery') }}
          {% else %}
            {{ states('sensor.template_front_door_sensor_battery_last') }}
          {% endif %}
#######################################################################################
automation:
  #####################################################################################
  - id: routine_home_security_check_on
    alias: "Routine: Attempt to put Home into Secure mode at regular intervals"
    mode: queued
    trigger:
      - platform: time_pattern
        minutes: "/15"
    condition: [ ]
    action:
      - if:
          - condition: template
            value_template: >-
              {{ states('input_boolean.home_security') == 'off' }}
        then:
          - service: input_boolean.turn_on
            entity_id: input_boolean.home_security
  #####################################################################################
  - id: routine_home_security_on
    alias: "Routine: Put Home into Secure mode"
    mode: queued
    trigger:
      - platform: state
        entity_id: input_boolean.home_security
        to: 'on'
    condition: [ ]
    action:
      - if:
          - condition: template
            value_template: >-
              {{ states('lock.back_door_lock') == 'unlocked' or states('lock.front_door_lock') == 'unlocked' }}
        then:
          - service: input_boolean.turn_on
            entity_id: input_boolean.home_security_triggered
          - delay: '00:00:01'
          - service: input_boolean.turn_off
            entity_id: input_boolean.home_security
        else:
          - service: input_boolean.turn_off
            entity_id: input_boolean.home_security_triggered
      - service: input_boolean.turn_on
        entity_id:
          - input_boolean.back_door_lock_security
          - input_boolean.front_door_lock_security
  #####################################################################################
  - id: routine_home_security_off
    alias: "Routine: Take Home out of Secure mode"
    mode: queued
    trigger:
      - platform: state
        entity_id: input_boolean.home_security
        to: 'off'
    condition: [ ]
    action:
      - if:
          - condition: template
            value_template: >-
              {{ states('input_boolean.home_security_triggered') == 'on' }}
        then:
          - service: input_boolean.turn_off
            entity_id: input_boolean.home_security_triggered
        else:
          - service: input_boolean.turn_off
            entity_id:
              - input_boolean.back_door_lock_security
              - input_boolean.front_door_lock_security
  #####################################################################################
  - id: routine_back_door_state_all_on
    alias: "Routine: Back Door State all on"
    mode: queued
    trigger:
      - platform: state
        entity_id: binary_sensor.template_back_door_state
        to: 'on'
    condition: [ ]
    action:
      - if:
          - condition: template
            value_template: >-
              {{ states('binary_sensor.template_back_door_state') == 'on' and states('binary_sensor.template_front_door_state') == 'on' }}
        then:
          - service: input_boolean.turn_on
            entity_id: input_boolean.home_security
  #####################################################################################
  - id: routine_back_door_state_all_off
    alias: "Routine: Back Door State all off"
    mode: queued
    trigger:
      - platform: state
        entity_id: binary_sensor.template_back_door_state
        to: 'off'
    condition: [ ]
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.home_security_triggered
      - service: input_boolean.turn_off
        entity_id: input_boolean.home_security
  #####################################################################################
  - id: routine_front_door_state_all_on
    alias: "Routine: Front Door State all on"
    mode: queued
    trigger:
      - platform: state
        entity_id: binary_sensor.template_front_door_state
        to: 'on'
    condition: [ ]
    action:
      - if:
          - condition: template
            value_template: >-
              {{ states('binary_sensor.template_back_door_state') == 'on' and states('binary_sensor.template_front_door_state') == 'on' }}
        then:
          - service: input_boolean.turn_on
            entity_id: input_boolean.home_security
  #####################################################################################
  - id: routine_front_door_state_all_off
    alias: "Routine: Front Door State all off"
    mode: queued
    trigger:
      - platform: state
        entity_id: binary_sensor.template_front_door_state
        to: 'off'
    condition: [ ]
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.home_security_triggered
      - service: input_boolean.turn_off
        entity_id: input_boolean.home_security
  #####################################################################################
  - id: routine_back_door_lock_security_on
    alias: "Routine: Put Back Door Lock into Secure mode"
    mode: queued
    trigger:
      - platform: state
        entity_id: input_boolean.back_door_lock_security
        to: 'on'
    condition: [ ]
    action:
      - if:
          - condition: template
            value_template: >-
              {{ states('lock.back_door_lock') == 'unlocked' }}
        then:
          - delay: '00:00:01'
          - service: input_boolean.turn_off
            entity_id: input_boolean.back_door_lock_security
      - if:
          - condition: template
            value_template: >-
              {{ states('binary_sensor.template_back_door_sensor_contact_last') == 'off' and states('lock.back_door_lock') == 'unlocked' }}
        then:
          - service: lock.lock
            entity_id: lock.back_door_lock
  #####################################################################################
  - id: routine_front_door_lock_security_on
    alias: "Routine: Put Front Door Lock into Secure mode"
    mode: queued
    trigger:
      - platform: state
        entity_id: input_boolean.front_door_lock_security
        to: 'on'
    condition: [ ]
    action:
      - if:
          - condition: template
            value_template: >-
              {{ states('lock.front_door_lock') == 'unlocked' }}
        then:
          - delay: '00:00:01'
          - service: input_boolean.turn_off
            entity_id: input_boolean.front_door_lock_security
      - if:
          - condition: template
            value_template: >-
              {{ states('binary_sensor.template_front_door_sensor_contact_last') == 'off' and states('lock.front_door_lock') == 'unlocked' }}
        then:
          - service: lock.lock
            entity_id: lock.front_door_lock
  #####################################################################################
  - id: routine_back_door_lock_security_off
    alias: "Routine: Take Back Door Lock out of Secure mode"
    mode: queued
    trigger:
      - platform: state
        entity_id: input_boolean.back_door_lock_security
        to: 'off'
    condition: [ ]
    action:
      - if:
          - condition: template
            value_template: >-
              {{ states('lock.back_door_lock') == 'locked' }}
        then:
          - service: lock.unlock
            entity_id: lock.back_door_lock
  #####################################################################################
  - id: routine_front_door_lock_security_off
    alias: "Routine: Take Front Door Lock out of Secure mode"
    mode: queued
    trigger:
      - platform: state
        entity_id: input_boolean.front_door_lock_security
        to: 'off'
    condition: [ ]
    action:
      - if:
          - condition: template
            value_template: >-
              {{ states('lock.front_door_lock') == 'locked' }}
        then:
          - service: lock.unlock
            entity_id: lock.front_door_lock
  #####################################################################################
  - id: routine_template_back_door_sensor_contact_last_on
    alias: "Routine: Template Back Door Sensor Contact Last on"
    mode: queued
    trigger:
      - platform: state
        entity_id: binary_sensor.template_back_door_sensor_contact_last
        to: 'off'
    condition: [ ]
    action:
      - delay: '00:00:01'
      - if:
          - condition: template
            value_template: >-
              {{ states('binary_sensor.template_back_door_sensor_contact_last') == 'off' and states('lock.back_door_lock') == 'unlocked' }}
        then:
          - service: lock.lock
            entity_id: lock.back_door_lock
      - delay: '00:00:01'
      - if:
          - condition: template
            value_template: >-
              {{ states('binary_sensor.template_back_door_sensor_contact_last') == 'off' and states('lock.back_door_lock') == 'unlocked' }}
        then:
          - service: lock.lock
            entity_id: lock.back_door_lock
      - delay: '00:00:01'
      - if:
          - condition: template
            value_template: >-
              {{ states('binary_sensor.template_back_door_sensor_contact_last') == 'off' and states('lock.back_door_lock') == 'unlocked' }}
        then:
          - service: lock.lock
            entity_id: lock.back_door_lock
  #####################################################################################
  - id: routine_template_front_door_sensor_contact_last_on
    alias: "Routine: Template Front Door Sensor Contact Last on"
    mode: queued
    trigger:
      - platform: state
        entity_id: binary_sensor.template_front_door_sensor_contact_last
        to: 'off'
    condition: [ ]
    action:
      - delay: '00:00:01'
      - if:
          - condition: template
            value_template: >-
              {{ states('binary_sensor.template_front_door_sensor_contact_last') == 'off' and states('lock.front_door_lock') == 'unlocked' }}
        then:
          - service: lock.lock
            entity_id: lock.front_door_lock
      - delay: '00:00:01'
      - if:
          - condition: template
            value_template: >-
              {{ states('binary_sensor.template_front_door_sensor_contact_last') == 'off' and states('lock.front_door_lock') == 'unlocked' }}
        then:
          - service: lock.lock
            entity_id: lock.front_door_lock
      - delay: '00:00:01'
      - if:
          - condition: template
            value_template: >-
              {{ states('binary_sensor.template_front_door_sensor_contact_last') == 'off' and states('lock.front_door_lock') == 'unlocked' }}
        then:
          - service: lock.lock
            entity_id: lock.front_door_lock
  #####################################################################################
  - id: routine_back_door_state_on
    alias: "Routine: Back Door State on"
    mode: queued
    trigger:
      - platform: state
        entity_id: binary_sensor.template_back_door_state
        to: 'on'
    condition: [ ]
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.back_door_lock_security
  #####################################################################################
  - id: routine_back_door_state_off
    alias: "Routine: Back Door State off"
    mode: queued
    trigger:
      - platform: state
        entity_id: binary_sensor.template_back_door_state
        to: 'off'
    condition: [ ]
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.back_door_lock_security
  #####################################################################################
  - id: routine_front_door_state_on
    alias: "Routine: Front Door State on"
    mode: queued
    trigger:
      - platform: state
        entity_id: binary_sensor.template_front_door_state
        to: 'on'
    condition: [ ]
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.front_door_lock_security
  #####################################################################################
  - id: routine_front_door_state_off
    alias: "Routine: Front Door State off"
    mode: queued
    trigger:
      - platform: state
        entity_id: binary_sensor.template_front_door_state
        to: 'off'
    condition: [ ]
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.front_door_lock_security
#######################################################################################
