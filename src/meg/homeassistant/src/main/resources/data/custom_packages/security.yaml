#######################################################################################
# WARNING: This file is written by the build process, any manual edits will be lost!
#######################################################################################
stream:
#######################################################################################
input_boolean:
  #####################################################################################
  home_security_triggered:
    name: Security triggered flag
    initial: false
  #####################################################################################
  back_door_lock_security:
    name: Back Door Lock Security
  #####################################################################################
  front_door_lock_security:
    name: Front Door Lock Security
#######################################################################################
template:
  #####################################################################################
  - binary_sensor:
      #################################################################################
      - unique_id: back_door_state
        icon: >-
          {% if states('binary_sensor.template_back_door_sensor_contact_last') == 'off' and states('lock.back_door_lock') == 'locked' %}
            mdi:shield-lock
          {% else %}
            mdi:shield-lock-open
          {% endif %}
        state: >-
          {% if states('binary_sensor.template_back_door_sensor_contact_last') == 'off' and states('lock.back_door_lock') == 'locked' %}
            on
          {% else %}
            off
          {% endif %}
      #################################################################################
      - unique_id: front_door_state
        icon: >-
          {% if states('binary_sensor.template_front_door_sensor_contact_last') == 'off' and states('lock.front_door_lock') == 'locked' %}
            mdi:shield-lock
          {% else %}
            mdi:shield-lock-open
          {% endif %}
        state: >-
          {% if states('binary_sensor.template_front_door_sensor_contact_last') == 'off' and states('lock.front_door_lock') == 'locked' %}
            on
          {% else %}
            off
          {% endif %}
      #################################################################################
      - unique_id: back_door_sensor_contact_last
        device_class: door
        state: >-
          {% if states('binary_sensor.back_door_sensor_contact') not in ['unavailable', 'unknown', 'none', 'n/a'] %}
            {{ states('binary_sensor.back_door_sensor_contact') }}
          {% else %}
            {{ states('binary_sensor.template_back_door_sensor_contact_last') }}
          {% endif %}
      #################################################################################
      - unique_id: front_door_sensor_contact_last
        device_class: door
        state: >-
          {% if states('binary_sensor.front_door_sensor_contact') not in ['unavailable', 'unknown', 'none', 'n/a'] %}
            {{ states('binary_sensor.front_door_sensor_contact') }}
          {% else %}
            {{ states('binary_sensor.template_front_door_sensor_contact_last') }}
          {% endif %}
  #####################################################################################
  - sensor:
      #################################################################################
      - unique_id: back_door_sensor_battery_last
        device_class: battery
        state_class: measurement
        unit_of_measurement: "%"
        state: >-
          {% if states('sensor.back_door_sensor_battery') not in ['unavailable', 'unknown', 'none', 'n/a'] %}
            {{ states('sensor.back_door_sensor_battery') | int(None) }}
          {% else %}
            {{ states('sensor.template_back_door_sensor_battery_last') | int(None) }}
          {% endif %}
      #################################################################################
      - unique_id: front_door_sensor_battery_last
        device_class: battery
        state_class: measurement
        unit_of_measurement: "%"
        state: >-
          {% if states('sensor.front_door_sensor_battery') not in ['unavailable', 'unknown', 'none', 'n/a'] %}
            {{ states('sensor.front_door_sensor_battery') | int(None) }}
          {% else %}
            {{ states('sensor.template_front_door_sensor_battery_last') | int(None) }}
          {% endif %}
