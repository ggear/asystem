#######################################################################################
# WARNING: This file is written by the build process, any manual edits will be lost!
#######################################################################################
compensation:
  #####################################################################################
  weatherstation_console_battery_percent:
    unique_id: weatherstation_console_battery_percent
    source: sensor.weatherstation_console_battery_voltage
    unit_of_measurement: "%"
    degree: 3
    precision: 0
    lower_limit: true
    upper_limit: true
    data_points:
      - [ 4, 100 ]
      - [ 3.97, 99 ]
      - [ 3.95, 98 ]
      - [ 3.92, 96 ]
      - [ 3.91, 94 ]
      - [ 3.9, 93 ]
      - [ 3.89, 91 ]
      - [ 3.88, 88 ]
      - [ 3.87, 87 ]
      - [ 3.85, 83 ]
      - [ 3.83, 81 ]
      - [ 3.81, 65 ]
      - [ 3.79, 59 ]
      - [ 3.78, 56 ]
      - [ 3.76, 50 ]
      - [ 3.75, 49 ]
      - [ 3.74, 43 ]
      - [ 3.72, 38 ]
      - [ 3.7, 35 ]
      - [ 3.68, 33 ]
      - [ 3.66, 28 ]
      - [ 3.64, 22 ]
      - [ 3.62, 21 ]
      - [ 3.61, 18 ]
      - [ 3.59, 16 ]
      - [ 3.58, 15 ]
      - [ 3.56, 10 ]
      - [ 3.54, 9 ]
      - [ 3.52, 8 ]
      - [ 3.49, 7 ]
      - [ 3.48, 6 ]
      - [ 3.46, 5 ]
      - [ 3.44, 3 ]
      - [ 3.4, 2 ]
      - [ 3.38, 1 ]
      - [ 3.32, 0 ]
#######################################################################################
template:
  #####################################################################################
  - sensor:
      #################################################################################
      - unique_id: weatherstation_console_battery_percent_int
        device_class: battery
        state_class: measurement
        unit_of_measurement: "%"
        state: >-
          {{ states('sensor.compensation_sensor_weatherstation_console_battery_voltage') | int(None) }}
      #################################################################################
      - unique_id: weatherstation_coms_signal_quality_percentage
        device_class: signal_strength
        state_class: measurement
        unit_of_measurement: "%"
        state: >-
          {{ states('sensor.weatherstation_coms_signal_quality') | int(0) }}
      #################################################################################
      - unique_id: driveway_repeater_linkquality_percentage
        device_class: signal_strength
        state_class: measurement
        unit_of_measurement: "%"
        state: >-
          {{ min(states('sensor.driveway_repeater_linkquality') | float(0) / 100 * 100, 100) | int(0) }}
      #################################################################################
      - unique_id: landing_repeater_linkquality_percentage
        device_class: signal_strength
        state_class: measurement
        unit_of_measurement: "%"
        state: >-
          {{ min(states('sensor.landing_repeater_linkquality') | float(0) / 100 * 100, 100) | int(0) }}
      #################################################################################
      - unique_id: garden_repeater_linkquality_percentage
        device_class: signal_strength
        state_class: measurement
        unit_of_measurement: "%"
        state: >-
          {{ min(states('sensor.garden_repeater_linkquality') | float(0) / 100 * 100, 100) | int(0) }}
      #################################################################################
      - unique_id: kitchen_fan_outlet_linkquality_percentage
        device_class: signal_strength
        state_class: measurement
        unit_of_measurement: "%"
        state: >-
          {{ min(states('sensor.kitchen_fan_outlet_linkquality') | float(0) / 100 * 100, 100) | int(0) }}
      #################################################################################
      - unique_id: deck_fans_outlet_linkquality_percentage
        device_class: signal_strength
        state_class: measurement
        unit_of_measurement: "%"
        state: >-
          {{ min(states('sensor.deck_fans_outlet_linkquality') | float(0) / 100 * 100, 100) | int(0) }}
      #################################################################################
      - unique_id: edwin_wardrobe_outlet_linkquality_percentage
        device_class: signal_strength
        state_class: measurement
        unit_of_measurement: "%"
        state: >-
          {{ min(states('sensor.edwin_wardrobe_outlet_linkquality') | float(0) / 100 * 100, 100) | int(0) }}
#######################################################################################
input_boolean:
  #####################################################################################
  network_refresh_zigbee_router_lqi:
    name: Refresh state
    initial: false
#######################################################################################
automation:
  #####################################################################################
  - id: network_refresh_zigbee_router_lqi_action_scheduled
    alias: "Network: Refresh Zigbee router network link qualities on schedule"
    trigger:
      - platform: time_pattern
        hours: "/1"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.network_refresh_zigbee_router_lqi
  #####################################################################################
  - id: network_refresh_zigbee_router_lqi_action
    alias: "Network: Refresh Zigbee router network link qualities"
    trigger:
      - platform: state
        entity_id: input_boolean.network_refresh_zigbee_router_lqi
        from: 'off'
        to: 'on'
    action:
      - service: mqtt.publish
        data:
          topic: "zigbee/Driveway Repeater/1/set"
          payload: '{"read":{"attributes":["dateCode","modelId"],"cluster":"genBasic","options":{}}}'
      - delay: '00:00:01'
      - service: mqtt.publish
        data:
          topic: "zigbee/Landing Repeater/1/set"
          payload: '{"read":{"attributes":["dateCode","modelId"],"cluster":"genBasic","options":{}}}'
      - delay: '00:00:01'
      - service: mqtt.publish
        data:
          topic: "zigbee/Garden Repeater/1/set"
          payload: '{"read":{"attributes":["dateCode","modelId"],"cluster":"genBasic","options":{}}}'
      - delay: '00:00:01'
      - service: mqtt.publish
        data:
          topic: "zigbee/Kitchen Fan Outlet/11/set"
          payload: '{"read":{"attributes":["dateCode","modelId"],"cluster":"genBasic","options":{}}}'
      - delay: '00:00:01'
      - service: mqtt.publish
        data:
          topic: "zigbee/Deck Fans Outlet/11/set"
          payload: '{"read":{"attributes":["dateCode","modelId"],"cluster":"genBasic","options":{}}}'
      - delay: '00:00:01'
      - service: mqtt.publish
        data:
          topic: "zigbee/Edwin Wardrobe Outlet/11/set"
          payload: '{"read":{"attributes":["dateCode","modelId"],"cluster":"genBasic","options":{}}}'
      - delay: '00:00:01'
      - delay: '00:00:01'
      - if:
          - condition: template
            value_template: >-
              {{ ((states('sensor.driveway_repeater_last_seen') | lower) in ['unavailable', 'unknown', 'none', 'n/a']) or
                    ((as_timestamp(now()) - as_timestamp(states('sensor.driveway_repeater_last_seen'))) > 11) }}
        then:
          - service: mqtt.publish
            data:
              topic: "zigbee/Driveway Repeater"
              payload: '{ "last_seen": null, "linkquality": 0, "state": null, "update": { "installed_version": null, "latest_version": null, "state": null }, "update_available": false }'
      - delay: '00:00:01'
      - if:
          - condition: template
            value_template: >-
              {{ ((states('sensor.landing_repeater_last_seen') | lower) in ['unavailable', 'unknown', 'none', 'n/a']) or
                    ((as_timestamp(now()) - as_timestamp(states('sensor.landing_repeater_last_seen'))) > 11) }}
        then:
          - service: mqtt.publish
            data:
              topic: "zigbee/Landing Repeater"
              payload: '{ "last_seen": null, "linkquality": 0, "state": null, "update": { "installed_version": null, "latest_version": null, "state": null }, "update_available": false }'
      - delay: '00:00:01'
      - if:
          - condition: template
            value_template: >-
              {{ ((states('sensor.garden_repeater_last_seen') | lower) in ['unavailable', 'unknown', 'none', 'n/a']) or
                    ((as_timestamp(now()) - as_timestamp(states('sensor.garden_repeater_last_seen'))) > 11) }}
        then:
          - service: mqtt.publish
            data:
              topic: "zigbee/Garden Repeater"
              payload: '{ "last_seen": null, "linkquality": 0, "state": null, "update": { "installed_version": null, "latest_version": null, "state": null }, "update_available": false }'
      - delay: '00:00:01'
      - if:
          - condition: template
            value_template: >-
              {{ ((states('sensor.kitchen_fan_outlet_last_seen') | lower) in ['unavailable', 'unknown', 'none', 'n/a']) or
                    ((as_timestamp(now()) - as_timestamp(states('sensor.kitchen_fan_outlet_last_seen'))) > 11) }}
        then:
          - service: mqtt.publish
            data:
              topic: "zigbee/Kitchen Fan Outlet"
              payload: '{ "last_seen": null, "linkquality": 0, "state": null, "update": { "installed_version": null, "latest_version": null, "state": null }, "update_available": false }'
      - delay: '00:00:01'
      - if:
          - condition: template
            value_template: >-
              {{ ((states('sensor.deck_fans_outlet_last_seen') | lower) in ['unavailable', 'unknown', 'none', 'n/a']) or
                    ((as_timestamp(now()) - as_timestamp(states('sensor.deck_fans_outlet_last_seen'))) > 11) }}
        then:
          - service: mqtt.publish
            data:
              topic: "zigbee/Deck Fans Outlet"
              payload: '{ "last_seen": null, "linkquality": 0, "state": null, "update": { "installed_version": null, "latest_version": null, "state": null }, "update_available": false }'
      - delay: '00:00:01'
      - if:
          - condition: template
            value_template: >-
              {{ ((states('sensor.edwin_wardrobe_outlet_last_seen') | lower) in ['unavailable', 'unknown', 'none', 'n/a']) or
                    ((as_timestamp(now()) - as_timestamp(states('sensor.edwin_wardrobe_outlet_last_seen'))) > 11) }}
        then:
          - service: mqtt.publish
            data:
              topic: "zigbee/Edwin Wardrobe Outlet"
              payload: '{ "last_seen": null, "linkquality": 0, "state": null, "update": { "installed_version": null, "latest_version": null, "state": null }, "update_available": false }'
      - service: input_boolean.turn_off
        entity_id: input_boolean.network_refresh_zigbee_router_lqi
#######################################################################################
