ARG ASYSTEM_TELEGRAF_VERSION="latest"

# DEFINED: [/asystem/.env_fab](https://github.com/ggear/asystem/blob/master/.env_fab)
FROM telegraf:${ASYSTEM_TELEGRAF_VERSION} AS image_upstream
# INFO: Generated by ./docker_deps.sh, itself generated by a fab pull
USER root
RUN \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends --allow-downgrades install bash=5.2.15-2+b9 && \
    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends --allow-downgrades install less=590-2.1~deb12u2 && \
    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends --allow-downgrades install vim=2:9.0.1378-2+deb12u2 && \
    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends --allow-downgrades install mosquitto-clients=2.0.11-1.2+deb12u2 && \
    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends --allow-downgrades install build-essential=12.9 && \
    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends --allow-downgrades install libbz2-dev=1.0.8-5+b1 && \
    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends --allow-downgrades install libffi-dev=3.4.4-1 && \
    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends --allow-downgrades install zlib1g-dev=1:1.2.13.dfsg-1 && \
    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends --allow-downgrades install libssl-dev=3.0.17-1~deb12u3 && \
    DEBIAN_FRONTEND=noninteractive apt-get clean && rm -rf /var/lib/apt/lists/* && \
    mkdir -p /asystem/bin && mkdir -p /asystem/etc && mkdir -p /asystem/mnt

FROM image_upstream AS image_base
ARG ASYSTEM_PYTHON_VERSION
RUN \
    cd /tmp && \
    rm -f Python* && \
    wget https://www.python.org/ftp/python/$ASYSTEM_PYTHON_VERSION/Python-$ASYSTEM_PYTHON_VERSION.tgz && \
    tar zxf Python-$ASYSTEM_PYTHON_VERSION.tgz && \
    cd /tmp/Python-$ASYSTEM_PYTHON_VERSION && \
    ./configure --enable-optimizations --prefix=/usr/local && \
    make -j"$(nproc)" PROFILE_TASK= && \
    make install && \
    python3 --version && \
    pip3 --version && \
    pip3 install --upgrade pip && \
    rm -rf /tmp/* /root/.cache

FROM image_base AS image_build
# INFO: Generated by ./docker_deps.sh, itself generated by a fab pull
COPY src/main/python/. /asystem/bin/python
COPY target/package/main/resources/image/. /asystem/etc
RUN \
    cp /asystem/etc/telegraf.conf /etc/telegraf/telegraf.conf && \
    [ -f /asystem/bin/python/.py_deps.txt ] && pip3 install --no-cache-dir --default-timeout=1000 -r /asystem/bin/python/.py_deps.txt

FROM image_build AS image_runtime
WORKDIR /asystem/etc
ENTRYPOINT ["/entrypoint.sh"]
CMD ["telegraf"]
